const nodemailer = require("nodemailer");

// C·∫•u h√¨nh email transporter
const createTransporter = () => {
  return nodemailer.createTransport({
    service: "gmail",
    auth: {
      user: process.env.EMAIL_USER || "truongkt693@gmail.com",
      pass: process.env.EMAIL_PASS || "tqdb bzaa cqzd iuwf",
    },
  });
};

// G·ª≠i OTP email cho ng∆∞·ªùi d√πng th√¥ng th∆∞·ªùng
const sendOTPEmail = async (email, otp) => {
  try {
    console.log(`üìß [Email Service] ƒêang g·ª≠i OTP ${otp} ƒë·∫øn ${email}`);
    const transporter = createTransporter();

    const mailOptions = {
      from: process.env.EMAIL_USER || "truongkt693@gmail.com",
      to: email,
      subject: "M√£ OTP x√°c minh email - OEM Mini Examination",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
            <h1 style="color: white; margin: 0; font-size: 28px;">OEM System</h1>
            <p style="color: white; margin: 10px 0 0 0; font-size: 16px;">X√°c minh email ƒëƒÉng k√Ω</p>
          </div>
          
          <div style="background: #f8f9fa; padding: 30px; border-radius: 0 0 10px 10px;">
            <h2 style="color: #333; margin-top: 0;">M√£ x√°c minh c·ªßa b·∫°n</h2>
            <p style="color: #666; font-size: 16px; line-height: 1.6;">
              Ch√†o b·∫°n!<br>
              B·∫°n ƒëang ƒëƒÉng k√Ω t√†i kho·∫£n tr√™n h·ªá th·ªëng OEM. ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, 
              vui l√≤ng s·ª≠ d·ª•ng m√£ OTP sau:
            </p>
            
            <div style="background: white; border: 2px dashed #667eea; border-radius: 10px; padding: 20px; margin: 20px 0; text-align: center;">
              <h1 style="color: #667eea; font-size: 36px; margin: 0; letter-spacing: 5px; font-family: 'Courier New', monospace;">
                ${otp}
              </h1>
            </div>
            
            <div style="background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 15px; margin: 20px 0;">
              <p style="color: #856404; margin: 0; font-size: 14px;">
                <strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong><br>
                ‚Ä¢ M√£ OTP c√≥ hi·ªáu l·ª±c trong 5 ph√∫t<br>
                ‚Ä¢ Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai<br>
                ‚Ä¢ N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu m√£ n√†y, vui l√≤ng b·ªè qua email
              </p>
            </div>
            
            <p style="color: #666; font-size: 14px; margin-top: 30px;">
              Tr√¢n tr·ªçng,<br>
              <strong>ƒê·ªôi ng≈© OEM System</strong>
            </p>
          </div>
        </div>
      `,
    };

    const result = await transporter.sendMail(mailOptions);
    console.log(
      `üìß [Email Service] OTP ƒë√£ g·ª≠i th√†nh c√¥ng ƒë·∫øn ${email}:`,
      result.messageId
    );
    return { success: true, messageId: result.messageId };
  } catch (error) {
    console.error("‚ùå [Email Service] L·ªói g·ª≠i email:", error);
    return { success: false, error: error.message };
  }
};

// G·ª≠i OTP email cho t√†i kho·∫£n Admin
const sendAdminOTPVerificationEmail = async (
  adminEmail,
  otpCode,
  fullName = "Admin"
) => {
  try {
    console.log(
      `üìß [Admin Email Service] ƒêang g·ª≠i m√£ OTP x√°c minh ƒë·∫øn ${adminEmail}`
    );
    const transporter = createTransporter();

    const mailOptions = {
      from: process.env.EMAIL_USER || "truongkt693@gmail.com",
      to: adminEmail,
      subject: "M√£ OTP x√°c minh t√†i kho·∫£n Qu·∫£n tr·ªã - OEM System",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <div style="background: linear-gradient(135deg, #2c5364 0%, #203a43 50%, #0f2027 100%); padding: 25px; text-align: center; border-radius: 10px 10px 0 0;">
            <h1 style="color: #ffffff; margin: 0; font-size: 24px;">OEM Mini System</h1>
            <p style="color: #dcdcdc; font-size: 14px;">X√°c minh t√†i kho·∫£n Qu·∫£n tr·ªã</p>
          </div>
          <div style="background: #f8f9fa; padding: 25px; border-radius: 0 0 10px 10px;">
            <p style="color: #333;">Xin ch√†o <strong>${fullName}</strong>,</p>
            <p style="color: #333;">
              B·∫°n ƒëang th·ª±c hi·ªán x√°c minh email ƒë·ªÉ t·∫°o t√†i kho·∫£n Qu·∫£n tr·ªã (Admin).<br>
              Vui l√≤ng s·ª≠ d·ª•ng m√£ OTP d∆∞·ªõi ƒë√¢y ƒë·ªÉ ho√†n t·∫•t b∆∞·ªõc x√°c minh:
            </p>
            <div style="background: #fff; border: 2px dashed #203a43; border-radius: 10px; padding: 15px; margin: 20px 0; text-align: center;">
              <h2 style="color: #203a43; font-family: 'Courier New', monospace; letter-spacing: 4px; font-size: 32px; margin: 0;">
                ${otpCode}
              </h2>
            </div>
            <p style="color: #555; font-size: 14px;">
              ‚è∞ M√£ OTP c√≥ hi·ªáu l·ª±c trong <strong>5 ph√∫t</strong> k·ªÉ t·ª´ l√∫c ƒë∆∞·ª£c g·ª≠i.<br>
              N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu, vui l√≤ng b·ªè qua email n√†y.
            </p>
            <p style="color: #444; font-size: 14px; margin-top: 30px;">
              Tr√¢n tr·ªçng,<br>
              <strong>ƒê·ªòI NG≈® PH√ÅT TRI·ªÇN OEM SYSTEM</strong>
            </p>
          </div>
        </div>
      `,
    };

    const result = await transporter.sendMail(mailOptions);
    console.log(
      `‚úÖ [Admin Email Service] G·ª≠i m√£ OTP th√†nh c√¥ng ƒë·∫øn ${adminEmail} | MessageID: ${result.messageId}`
    );
    return { success: true, messageId: result.messageId };
  } catch (error) {
    console.error(
      "‚ùå [Admin Email Service] L·ªói khi g·ª≠i m√£ OTP:",
      error.message
    );
    return { success: false, error: error.message };
  }
};

// Test email configuration
const testEmailConfig = async () => {
  try {
    const transporter = createTransporter();
    await transporter.verify();
    console.log(
      "‚úÖ [Email Service] C·∫•u h√¨nh email h·ª£p l·ªá - truongkt693@gmail.com"
    );
    return true;
  } catch (error) {
    console.error("‚ùå [Email Service] L·ªói c·∫•u h√¨nh email:", error.message);
    console.log("üìñ Ki·ªÉm tra l·∫°i EMAIL_USER v√† EMAIL_PASS");
    return false;
  }
};

module.exports = {
  sendOTPEmail,
  sendAdminOTPVerificationEmail,
  testEmailConfig,
};
